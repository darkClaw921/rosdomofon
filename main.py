from rosdomofon import RosDomofonAPI
from rosdomofon.models import SignUpEvent
from dotenv import load_dotenv
import os
from pprint import pprint
import time
load_dotenv()
USERNAME = os.getenv("USERNAME")
PASSWORD = os.getenv("PASSWORD")
KAFKA_BOOTSTRAP_SERVERS = os.getenv("KAFKA_BOOTSTRAP_SERVERS")
KAFKA_USERNAME = os.getenv("KAFKA_USERNAME")
KAFKA_PASSWORD = os.getenv("KAFKA_PASSWORD")
KAFKA_GROUP_ID = os.getenv("KAFKA_GROUP_ID")
KAFKA_SSL_CA_CERT_PATH = os.getenv("KAFKA_SSL_CA_CERT_PATH")
COMPANY_SHORT_NAME = os.getenv("COMPANY_SHORT_NAME")
print(f'{KAFKA_SSL_CA_CERT_PATH=}')


def handle_company_signup(signup: SignUpEvent):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ Kafka (—Ç–æ–ø–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ SIGN_UPS_<company_short_name>)
    
    Args:
        signup: –°–æ–±—ã—Ç–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤ –∫–æ–º–ø–∞–Ω–∏–∏
    """
    print(f"\nüìù [–¢–æ–ø–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏] –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–∞:")
    print(f"   ID: {signup.abonent.id}")
    print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {signup.abonent.phone}")
    print(f"   –°—Ç—Ä–∞–Ω–∞: {signup.address.country.name} ({signup.address.country.short_name})")
    print(f"   –ê–¥—Ä–µ—Å: {signup.address.city}, —É–ª.{signup.address.street.name}, –¥.{signup.address.house.number}")
    print(f"   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {signup.application.name} ({signup.application.provider})")
    print(f"   –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ç—Ä—É–±–∫–∞: {signup.virtual}")
    print(f"   –û—Ñ–µ—Ä—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∞: {signup.offer_signed}")
    print(f"   –ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞: {signup.contract_number or '–Ω–µ —É–∫–∞–∑–∞–Ω'}")
    print(f"   –°—Ç–∞—Ç—É—Å: {signup.status}")
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ REST API
    # api.send_message_to_abonent(
    #     signup.abonent.id,
    #     'support',
    #     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é!'
    # )

def main():
    print("Hello from rosdomofon-bitrix24!")
    api = RosDomofonAPI(
        username=USERNAME, 
        password=PASSWORD, 
        kafka_bootstrap_servers=KAFKA_BOOTSTRAP_SERVERS, 
        kafka_username=KAFKA_USERNAME, 
        kafka_password=KAFKA_PASSWORD, 
        kafka_group_id=KAFKA_GROUP_ID,
        kafka_ssl_ca_cert_path=KAFKA_SSL_CA_CERT_PATH,
        company_short_name=COMPANY_SHORT_NAME
        )
    api.authenticate()

    # services = api.get_all_services()
    # pprint(services)
    api.set_company_signup_handler(handle_company_signup)
    api.start_company_signup_consumer()
    # account = api.get_account_by_phone(79308312222)
    # print(account)
    # abonent_id=account.owner.id
    # account_id=account.id

    #–ø–æ–ª—É—á–∞–µ–º —É—Å–ª—É–≥–∏ –∞–±–æ–Ω–µ–Ω—Ç–∞
    # services = api.get_account_connections(account_id)
    # print(services)
    # connection_id=services[0].id
    # print(connection_id)

    # api.unblock_connection(connection_id)
    # service_connections = api.get_service_connections(connection_id)
    # print(service_connections)

    time.sleep(100)
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏...")
    api.stop_company_signup_consumer()
    print("üîí –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π...")
    api.close()
    # messages = api.get_abonent_messages(abonent_id, channel='support', page=0, size=10)
    # print(messages)

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    # api.send_message_to_abonent(abonent_id, 'support', f'–≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ {messages.content[0].message}')
    # for account in accounts:
    #     print(f"ID: {account.id}")
    #     print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {account.owner.phone}")
    #     print(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: {account.blocked}")
    #     print(f"–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞: {account.number or '–ù–µ —É–∫–∞–∑–∞–Ω'}")

if __name__ == "__main__":
    main()
